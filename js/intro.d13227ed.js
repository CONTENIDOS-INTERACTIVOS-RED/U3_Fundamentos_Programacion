(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["intro"],{"2f1e":function(a,e,s){a.exports=s.p+"img/2.a0a75536.png"},5167:function(a,e,s){"use strict";s.r(e);var t=function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("div",{staticClass:"curso-main-container introduccion"},[s("BannerInterno",{attrs:{subTitulo:"Introducción"}}),a._m(0)],1)},i=[function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"container tarjeta tarjeta--blanca p-4 p-md-5 mb-"},[t("div",{staticClass:"row mb-5"},[t("div",{staticClass:"col-lg-8"},[t("p",{staticClass:"mb-4",attrs:{"data-aos":"fade-left"}},[a._v("En el desarrollo de software, la capacidad de estructurar el código de manera reutilizable es fundamental para construir programas escalables y mantenibles. En este contexto, las funciones y la modularidad cumplen un papel clave, ya que permiten dividir un problema en partes más pequeñas y manejables, facilitando tanto la organización del código como su comprensión y mantenimiento. ")]),t("div",{staticClass:"bg-color-1 p-4 mb-4",attrs:{"data-aos":"fade-left"}},[t("div",{staticClass:"row align-items-start"},[t("div",{staticClass:"col-lg-auto"},[t("img",{staticClass:"mx-auto",staticStyle:{"max-width":"90px"},attrs:{src:s("65e6")}})]),t("div",{staticClass:"col-lg"},[t("p",{staticClass:"mb-0"},[a._v("Esta unidad proporciona una base sólida en el uso de funciones y el diseño modular, abordando tres aspectos esenciales. Primero, se estudiará la declaración y uso de funciones, explorando cómo encapsular bloques de código que pueden ejecutarse múltiples veces sin necesidad de repetición, lo que mejora la claridad y organización de los programas.")])])])])]),t("div",{staticClass:"col-lg-4"},[t("figure",[t("img",{attrs:{src:s("2f1e"),"data-aos":"zoom-in"}})])])]),t("div",{staticClass:"row mb-5 align-items-center"},[t("div",{staticClass:"col-lg-4"},[t("figure",[t("img",{attrs:{src:s("84d1"),"data-aos":"zoom-in"}})])]),t("div",{staticClass:"col-lg-8"},[t("p",{staticClass:"mb-4",attrs:{"data-aos":"fade-left"}},[a._v("Luego, se analizará el concepto de recursión, una técnica en la que una función se llama a sí misma para resolver problemas de manera estructurada. Se examinarán los principios detrás de este enfoque, sus aplicaciones más comunes y las mejores prácticas para evitar errores.")]),t("div",{staticClass:"bg-color-8 p-4",attrs:{"data-aos":"fade-left"}},[t("p",{staticClass:"mb-0"},[a._v("Finalmente, se profundizará en la modularidad en proyectos, un principio clave en el diseño de software que permite dividir grandes sistemas en componentes más pequeños e independientes. Se estudiará cómo organizar el código en módulos, gestionar dependencias y facilitar la colaboración en entornos de desarrollo.")])])])])])}],n=s("2877"),o={},r=Object(n["a"])(o,t,i,!1,null,null,null);e["default"]=r.exports},"65e6":function(a,e,s){a.exports=s.p+"img/1.50f3bca6.svg"},"84d1":function(a,e,s){a.exports=s.p+"img/3.f2d0b5ab.png"}}]);
//# sourceMappingURL=intro.d13227ed.js.map